{"ast":null,"code":"var _jsxFileName = \"/Users/rodericcoscolluela/Documents/password-manager/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Dashboard from \"./components/Dashboard\";\nimport Nav from \"./components/Nav\";\nimport PostSuccess from \"./modals/PostSuccess\";\nimport { BrowserRouter as Router, Routes, Route, useRoutes } from \"react-router-dom\";\nimport NewPage from \"./components/ResultsPage\";\nimport ResultsPage from \"./components/ResultsPage\";\nimport CoursePage from \"./components/CoursePage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [dashboardHeader, setDashboardHeader] = useState(\"Welcome to CourseRate\");\n  const [resultsHeader, setResultsHeader] = useState(\"\");\n  const [currentSearchValue, setCurrentSearchValue] = useState();\n  const courseArray = [\"ACMA\", \"ALS\", \"ALC\", \"APMA\", \"ARAB\", \"ARCH\", \"BISC\", \"BPK\", \"BUS\", \"CHEM\", \"CHIN\", \"COGS\", \"CMPT\", \"CA\", \"CRIM\", \"DATA\", \"DIAL\", \"DMED\", \"EASC\", \"ECO\", \"ECON\", \"EDUC\", \"EDPR\", \"ETEC\", \"ENSC\", \"ENGL\", \"ENV\", \"EVSC\", \"FASS\", \"FAL\", \"FAN\", \"FREN\", \"GSWS\", \"GS\", \"GEOG\", \"GERM\", \"GERO\", \"GA\", \"GRK\", \"HSCI\", \"HIST\", \"HUM\", \"INLG\", \"INDG\", \"INS\", \"IAT\", \"IS\", \"ITAL\", \"JAPN\", \"LBST\", \"LANG\", \"LAS\", \"LBRL\", \"LS\", \"LING\", \"MTEC\", \"MASC\", \"MATH\", \"MACM\", \"MSE\", \"MBB\", \"NEUR\", \"NUSC\", \"ONC\", \"PERS\", \"PHIL\", \"PHYS\", \"PLAN\", \"POL\", \"PSYC\", \"PLCY\", \"PUB\", \"PUNJ\", \"REM\", \"SCI\", \"SDA\", \"SA\", \"SPAN\", \"STAT\", \"SD\", \"SEE\", \"TEKX\", \"TRSS\", \"URB\", \"WL\"];\n  const difficultyArray = [\"1 - Very easy\", \"2 - Easy\", \"3 - Normal\", \"4 - Hard\", \"5 - Very hard\"];\n  const workloadArray = [\"1 - Very light\", \"2 - Light\", \"3 - Normal\", \"4 - Heavy\", \"5 - Very heavy\"];\n  const profRateArray = [\"1\", \"2\", \"3\", \"4\", \"5\"];\n  const facultyArray = [\"Applied Sciences\", \"Arts and Social Sciences\", \"Beedie School of Business\", \"Communication, Arts and Technology\", \"Education\", \"Environment\", \"Health Sciences\", \"Science\"];\n  const [entriesArray, setEntriesArray] = useState([]);\n  const [coursesArray, setCoursesArray] = useState([]);\n  const [averagesArray, setAveragesArray] = useState([]);\n  const [searchArray, setSearchArray] = useState([]);\n  const [searchName, setSearchName] = useState();\n  const [isOpen, setIsOpen] = useState(false);\n  const [isFilledOpen, setIsFilledOpen] = useState(false);\n  const [filledForm, setFilledForm] = useState(false);\n  const [currentPageName, setCurrentPageName] = useState(\"\");\n  const [isSuccessOpen, setIsSuccessOpen] = useState(false);\n  console.log(filledForm);\n\n  const getEntries = async () => {\n    try {\n      const response = await fetch(\"/api/get\");\n      const jsonData = await response.json();\n      setEntriesArray(jsonData.rows);\n    } catch (err) {\n      console.log(err.message);\n    }\n  };\n\n  useEffect(() => {\n    getEntries();\n  }, []);\n\n  const getAverages = async () => {\n    try {\n      const response = await fetch(\"/api/getAverages\");\n      const jsonData = await response.json();\n      setAveragesArray(jsonData.rows);\n    } catch (err) {\n      console.log(err.message);\n    }\n  };\n\n  useEffect(() => {\n    getAverages();\n  }, []);\n  React.useEffect(() => {\n    const data = localStorage.getItem(\"currentSearchValue\");\n\n    if (data) {\n      setCurrentSearchValue(JSON.parse(data));\n    }\n  }, []);\n  React.useEffect(() => {\n    const stateInfo = JSON.stringify(currentSearchValue);\n\n    if (stateInfo) {\n      localStorage.setItem(\"currentSearchValue\", stateInfo);\n    }\n  });\n  React.useEffect(() => {\n    const data = localStorage.getItem(\"searchName\");\n\n    if (data) {\n      setSearchName(JSON.parse(data));\n    }\n  }, []);\n  React.useEffect(() => {\n    const stateInfo = JSON.stringify(searchName);\n\n    if (stateInfo) {\n      localStorage.setItem(\"searchName\", stateInfo);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Nav, {\n        setDashboardHeader: setDashboardHeader,\n        courseArray: courseArray,\n        difficultyArray: difficultyArray,\n        workloadArray: workloadArray,\n        profRateArray: profRateArray,\n        facultyArray: facultyArray,\n        entriesArray: entriesArray,\n        setEntriesArray: setEntriesArray,\n        coursesArray: coursesArray,\n        setCoursesArray: setCoursesArray,\n        averagesArray: averagesArray,\n        setAveragesArray: setAveragesArray,\n        searchArray: searchArray,\n        setSearchArray: setSearchArray,\n        setIsOpen: setIsOpen,\n        isOpen: isOpen,\n        filledForm: filledForm,\n        setFilledForm: setFilledForm,\n        currentPageName: currentPageName,\n        setIsSuccessOpen: setIsSuccessOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Dashboard, {\n              dashboardHeader: dashboardHeader,\n              setDashboardHeader: setDashboardHeader,\n              setEntriesArray: setEntriesArray,\n              entriesArray: entriesArray,\n              averagesArray: averagesArray,\n              searchArray: searchArray,\n              setResultsHeader: setResultsHeader,\n              currentSearchValue: currentSearchValue,\n              setCurrentSearchValue: setCurrentSearchValue,\n              setSearchName: setSearchName,\n              searchName: searchName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/search/:id\",\n            element: /*#__PURE__*/_jsxDEV(ResultsPage, {\n              dashboardHeader: dashboardHeader,\n              resultsHeader: resultsHeader,\n              currentSearchValue: currentSearchValue,\n              entriesArray: entriesArray,\n              searchArray: searchArray,\n              averagesArray: averagesArray,\n              setSearchName: setSearchName,\n              searchName: searchName,\n              setCurrentSearchValue: setCurrentSearchValue\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/course/:id\",\n            element: /*#__PURE__*/_jsxDEV(CoursePage, {\n              averagesArray: averagesArray,\n              entriesArray: entriesArray,\n              searchArray: searchArray,\n              setIsOpen: setIsOpen,\n              setFilledForm: setFilledForm,\n              setCurrentPageName: setCurrentPageName,\n              setIsFilledOpen: setIsFilledOpen,\n              isFilledOpen: isFilledOpen,\n              isOpen: isOpen,\n              difficultyArray: difficultyArray,\n              workloadArray: workloadArray,\n              profRateArray: profRateArray,\n              facultyArray: facultyArray,\n              filledForm: filledForm,\n              currentPageName: currentPageName,\n              courseArray: courseArray,\n              setIsSuccessOpen: setIsSuccessOpen\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PostSuccess, {\n          isSuccessOpen: isSuccessOpen,\n          setIsSuccessOpen: setIsSuccessOpen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"ooeuhm30JvSBP+fk4xjxqyfIRus=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/rodericcoscolluela/Documents/password-manager/client/src/App.js"],"names":["React","useState","useEffect","Dashboard","Nav","PostSuccess","BrowserRouter","Router","Routes","Route","useRoutes","NewPage","ResultsPage","CoursePage","App","dashboardHeader","setDashboardHeader","resultsHeader","setResultsHeader","currentSearchValue","setCurrentSearchValue","courseArray","difficultyArray","workloadArray","profRateArray","facultyArray","entriesArray","setEntriesArray","coursesArray","setCoursesArray","averagesArray","setAveragesArray","searchArray","setSearchArray","searchName","setSearchName","isOpen","setIsOpen","isFilledOpen","setIsFilledOpen","filledForm","setFilledForm","currentPageName","setCurrentPageName","isSuccessOpen","setIsSuccessOpen","console","log","getEntries","response","fetch","jsonData","json","rows","err","message","getAverages","data","localStorage","getItem","JSON","parse","stateInfo","stringify","setItem"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Dashboard from \"./components/Dashboard\";\nimport Nav from \"./components/Nav\";\nimport PostSuccess from \"./modals/PostSuccess\";\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  useRoutes\n} from \"react-router-dom\";\nimport NewPage from \"./components/ResultsPage\";\nimport ResultsPage from \"./components/ResultsPage\";\nimport CoursePage from \"./components/CoursePage\";\n\nconst App = () => {\n  const [dashboardHeader, setDashboardHeader] = useState(\n    \"Welcome to CourseRate\"\n  );\n  const [resultsHeader, setResultsHeader] = useState(\"\");\n  const [currentSearchValue, setCurrentSearchValue] = useState();\n  const courseArray = [\n    \"ACMA\",\n    \"ALS\",\n    \"ALC\",\n    \"APMA\",\n    \"ARAB\",\n    \"ARCH\",\n    \"BISC\",\n    \"BPK\",\n    \"BUS\",\n    \"CHEM\",\n    \"CHIN\",\n    \"COGS\",\n    \"CMPT\",\n    \"CA\",\n    \"CRIM\",\n    \"DATA\",\n    \"DIAL\",\n    \"DMED\",\n    \"EASC\",\n    \"ECO\",\n    \"ECON\",\n    \"EDUC\",\n    \"EDPR\",\n    \"ETEC\",\n    \"ENSC\",\n    \"ENGL\",\n    \"ENV\",\n    \"EVSC\",\n    \"FASS\",\n    \"FAL\",\n    \"FAN\",\n    \"FREN\",\n    \"GSWS\",\n    \"GS\",\n    \"GEOG\",\n    \"GERM\",\n    \"GERO\",\n    \"GA\",\n    \"GRK\",\n    \"HSCI\",\n    \"HIST\",\n    \"HUM\",\n    \"INLG\",\n    \"INDG\",\n    \"INS\",\n    \"IAT\",\n    \"IS\",\n    \"ITAL\",\n    \"JAPN\",\n    \"LBST\",\n    \"LANG\",\n    \"LAS\",\n    \"LBRL\",\n    \"LS\",\n    \"LING\",\n    \"MTEC\",\n    \"MASC\",\n    \"MATH\",\n    \"MACM\",\n    \"MSE\",\n    \"MBB\",\n    \"NEUR\",\n    \"NUSC\",\n    \"ONC\",\n    \"PERS\",\n    \"PHIL\",\n    \"PHYS\",\n    \"PLAN\",\n    \"POL\",\n    \"PSYC\",\n    \"PLCY\",\n    \"PUB\",\n    \"PUNJ\",\n    \"REM\",\n    \"SCI\",\n    \"SDA\",\n    \"SA\",\n    \"SPAN\",\n    \"STAT\",\n    \"SD\",\n    \"SEE\",\n    \"TEKX\",\n    \"TRSS\",\n    \"URB\",\n    \"WL\"\n  ];\n  const difficultyArray = [\n    \"1 - Very easy\",\n    \"2 - Easy\",\n    \"3 - Normal\",\n    \"4 - Hard\",\n    \"5 - Very hard\"\n  ];\n  const workloadArray = [\n    \"1 - Very light\",\n    \"2 - Light\",\n    \"3 - Normal\",\n    \"4 - Heavy\",\n    \"5 - Very heavy\"\n  ];\n  const profRateArray = [\"1\", \"2\", \"3\", \"4\", \"5\"];\n  const facultyArray = [\n    \"Applied Sciences\",\n    \"Arts and Social Sciences\",\n    \"Beedie School of Business\",\n    \"Communication, Arts and Technology\",\n    \"Education\",\n    \"Environment\",\n    \"Health Sciences\",\n    \"Science\"\n  ];\n\n  const [entriesArray, setEntriesArray] = useState([]);\n  const [coursesArray, setCoursesArray] = useState([]);\n  const [averagesArray, setAveragesArray] = useState([]);\n  const [searchArray, setSearchArray] = useState([]);\n  const [searchName, setSearchName] = useState();\n  const [isOpen, setIsOpen] = useState(false);\n  const [isFilledOpen, setIsFilledOpen] = useState(false);\n  const [filledForm, setFilledForm] = useState(false);\n  const [currentPageName, setCurrentPageName] = useState(\"\");\n  const [isSuccessOpen, setIsSuccessOpen] = useState(false);\n  console.log(filledForm);\n \n\n  const getEntries = async () => {\n    try {\n      const response = await fetch(\"/api/get\");\n      const jsonData = await response.json();\n      setEntriesArray(jsonData.rows);\n    } catch (err) {\n      console.log(err.message);\n    }\n  };\n  useEffect(() => {\n    getEntries();\n  }, []);\n\n  const getAverages = async () => {\n    try {\n      const response = await fetch(\"/api/getAverages\");\n      const jsonData = await response.json();\n      setAveragesArray(jsonData.rows);\n    } catch (err) {\n      console.log(err.message);\n    }\n  };\n  useEffect(() => {\n    getAverages();\n  }, []);\n\n  React.useEffect(() => {\n    const data = localStorage.getItem(\"currentSearchValue\");\n    if (data) {\n      setCurrentSearchValue(JSON.parse(data));\n    }\n  }, []);\n\n  React.useEffect(() => {\n    const stateInfo = JSON.stringify(currentSearchValue);\n    if (stateInfo) {\n      localStorage.setItem(\"currentSearchValue\", stateInfo);\n    }\n  });\n\n  React.useEffect(() => {\n    const data = localStorage.getItem(\"searchName\");\n    if (data) {\n      setSearchName(JSON.parse(data));\n    }\n  }, []);\n\n  React.useEffect(() => {\n    const stateInfo = JSON.stringify(searchName);\n    if (stateInfo) {\n      localStorage.setItem(\"searchName\", stateInfo);\n    }\n  });\n\n  return (\n    <React.Fragment>\n      <Router>\n        <Nav\n          setDashboardHeader={setDashboardHeader}\n          courseArray={courseArray}\n          difficultyArray={difficultyArray}\n          workloadArray={workloadArray}\n          profRateArray={profRateArray}\n          facultyArray={facultyArray}\n          entriesArray={entriesArray}\n          setEntriesArray={setEntriesArray}\n          coursesArray={coursesArray}\n          setCoursesArray={setCoursesArray}\n          averagesArray={averagesArray}\n          setAveragesArray={setAveragesArray}\n          searchArray={searchArray}\n          setSearchArray={setSearchArray}\n          setIsOpen={setIsOpen}\n          isOpen={isOpen}\n          filledForm={filledForm}\n          setFilledForm={setFilledForm}\n          currentPageName={currentPageName}\n          setIsSuccessOpen={setIsSuccessOpen}\n\n        />\n        <div className=\"content\">\n          <Routes>\n            <Route\n              path=\"/\"\n              element={\n                <Dashboard\n                  dashboardHeader={dashboardHeader}\n                  setDashboardHeader={setDashboardHeader}\n                  setEntriesArray={setEntriesArray}\n                  entriesArray={entriesArray}\n                  averagesArray={averagesArray}\n                  searchArray={searchArray}\n                  setResultsHeader={setResultsHeader}\n                  currentSearchValue={currentSearchValue}\n                  setCurrentSearchValue={setCurrentSearchValue}\n                  setSearchName={setSearchName}\n                  searchName={searchName}\n                />\n              }\n            />\n            <Route\n              exact\n              path={\"/search/:id\"}\n              element={\n                <ResultsPage\n                  dashboardHeader={dashboardHeader}\n                  resultsHeader={resultsHeader}\n                  currentSearchValue={currentSearchValue}\n                  entriesArray={entriesArray}\n                  searchArray={searchArray}\n                  averagesArray={averagesArray}\n                  setSearchName={setSearchName}\n                  searchName={searchName}\n                  setCurrentSearchValue={setCurrentSearchValue}\n                />\n              }\n            />\n            <Route\n              exact\n              path={\"/course/:id\"}\n              element={\n                <CoursePage\n                  averagesArray={averagesArray}\n                  entriesArray={entriesArray}\n                  searchArray={searchArray}\n                  setIsOpen={setIsOpen}\n                  setFilledForm={setFilledForm}\n                  setCurrentPageName={setCurrentPageName}\n                  setIsFilledOpen={setIsFilledOpen}\n                  isFilledOpen={isFilledOpen}\n                  isOpen={isOpen}\n                  difficultyArray={difficultyArray}\n                  workloadArray={workloadArray}\n                  profRateArray={profRateArray}\n                  facultyArray={facultyArray}\n                  filledForm={filledForm}\n                  currentPageName={currentPageName}\n                  courseArray={courseArray}\n                  setIsSuccessOpen={setIsSuccessOpen}\n                />\n              }\n            />\n          </Routes>\n          <PostSuccess\n            isSuccessOpen={isSuccessOpen}\n            setIsSuccessOpen={setIsSuccessOpen}\n          />\n        </div>\n      </Router>\n    </React.Fragment>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}