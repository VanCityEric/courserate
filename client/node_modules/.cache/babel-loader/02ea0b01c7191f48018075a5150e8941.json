{"ast":null,"code":"import{faBackspace}from\"@fortawesome/free-solid-svg-icons\";import React from\"react\";import NewPostFilled from\"../modals/NewPostFilled\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CoursePageHeader=function CoursePageHeader(_ref){var id=_ref.id,averagesArray=_ref.averagesArray,entriesArray=_ref.entriesArray,courseName=_ref.courseName,courseNumber=_ref.courseNumber,difficulty=_ref.difficulty,workload=_ref.workload,average=_ref.average,repeat=_ref.repeat,setIsOpen=_ref.setIsOpen,setFilledForm=_ref.setFilledForm,setCurrentPageName=_ref.setCurrentPageName,isFilledOpen=_ref.isFilledOpen,setIsFilledOpen=_ref.setIsFilledOpen,isOpen=_ref.isOpen,difficultyArray=_ref.difficultyArray,workloadArray=_ref.workloadArray,coursesArray=_ref.coursesArray,profRateArray=_ref.profRateArray,facultyArray=_ref.facultyArray,courseArray=_ref.courseArray,filledForm=_ref.filledForm,currentPageName=_ref.currentPageName,setIsSuccessOpen=_ref.setIsSuccessOpen;var averageDifficulty=difficulty/repeat;var averageWorkload=workload/repeat;var averageQuality=average/repeat;var difficultyBar=averageDifficulty/5*100;var difficultyBarWidth=difficultyBar+\"%\";var workloadBar=averageWorkload/5*100;var workloadBarWidth=workloadBar+\"%\";var difficultyProgressBarStyle={width:difficultyBarWidth,backgroundColor:\"rgb(140, 0, 255)\",height:\"100%\"};var workloadProgressBarStyle={width:workloadBarWidth,backgroundColor:\"rgb(140, 0, 255)\",height:\"100%\"};var qualityClassName=\" col1 cp-overall-rating table\";if(averageQuality<3){qualityClassName+=\" red\";}else if(averageQuality===3){qualityClassName+=\" yellow\";}else if(averageQuality>3){qualityClassName+=\" green\";}var openFilledFormHander=function openFilledFormHander(){setIsFilledOpen(true);setFilledForm(true);setCurrentPageName(courseName);};return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(NewPostFilled,{isFilledOpen:isFilledOpen,setIsFilledOpen:setIsFilledOpen,open:isOpen,difficultyArray:difficultyArray,courseArray:courseArray,workloadArray:workloadArray,profRateArray:profRateArray,facultyArray:facultyArray,setIsOpen:setIsOpen,entriesArray:entriesArray,coursesArray:coursesArray,filledForm:filledForm,setFilledForm:setFilledForm,currentPageName:currentPageName,id:id,courseName:courseName,courseNumber:courseNumber,setIsSuccessOpen:setIsSuccessOpen,averagesArray:averagesArray}),/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"wrapper course-page-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"course-page\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col1\",children:/*#__PURE__*/_jsx(\"div\",{className:\"table course-page-title\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"vertical\",children:[/*#__PURE__*/_jsx(\"h2\",{children:id}),/*#__PURE__*/_jsx(\"h3\",{children:\"Simon Fraser University\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn coursepage-btn\",onClick:function onClick(){return setIsFilledOpen(true);},children:\"Review this course\"})]})})}),/*#__PURE__*/_jsx(\"div\",{className:\"col1\",children:/*#__PURE__*/_jsx(\"div\",{className:\"table course-page-graph\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"vertical\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Average Ratings \"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"div\",{className:\"cp-overall-rating-container row\",children:[/*#__PURE__*/_jsx(\"div\",{className:qualityClassName,children:/*#__PURE__*/_jsx(\"div\",{className:\"vertical\",children:/*#__PURE__*/_jsx(\"h2\",{children:averageQuality.toFixed(1)})})}),/*#__PURE__*/_jsx(\"div\",{className:\"col2 cp-overall-text table\",children:/*#__PURE__*/_jsx(\"div\",{className:\"vertical\",children:/*#__PURE__*/_jsxs(\"p\",{children:[\"Course quality based on\",\" \",/*#__PURE__*/_jsxs(\"span\",{className:\"bold\",children:[\" \",repeat,\" review(s)\"]})]})})})]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"br\",{}),\"Difficulty:\",\" \",/*#__PURE__*/_jsx(\"span\",{className:\"bold course-page-rating\",children:averageDifficulty.toFixed(1)}),\" \",/*#__PURE__*/_jsx(\"span\",{className:\"out-of-five\",children:\"/ 5\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar-border\",children:/*#__PURE__*/_jsx(\"div\",{style:difficultyProgressBarStyle})}),\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Workload:\",\" \",/*#__PURE__*/_jsx(\"span\",{className:\"bold course-page-rating\",children:averageWorkload.toFixed(1)}),\" \",/*#__PURE__*/_jsx(\"span\",{className:\"out-of-five\",children:\"/ 5\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar-border\",children:/*#__PURE__*/_jsx(\"div\",{style:workloadProgressBarStyle})})]})})})]})})})})]});};export default CoursePageHeader;","map":{"version":3,"sources":["D:/Coding/CourseRate/course-rate/client/src/components/CoursePageHeader.js"],"names":["faBackspace","React","NewPostFilled","CoursePageHeader","id","averagesArray","entriesArray","courseName","courseNumber","difficulty","workload","average","repeat","setIsOpen","setFilledForm","setCurrentPageName","isFilledOpen","setIsFilledOpen","isOpen","difficultyArray","workloadArray","coursesArray","profRateArray","facultyArray","courseArray","filledForm","currentPageName","setIsSuccessOpen","averageDifficulty","averageWorkload","averageQuality","difficultyBar","difficultyBarWidth","workloadBar","workloadBarWidth","difficultyProgressBarStyle","width","backgroundColor","height","workloadProgressBarStyle","qualityClassName","openFilledFormHander","toFixed"],"mappings":"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","sourcesContent":["import { faBackspace } from \"@fortawesome/free-solid-svg-icons\";\nimport React from \"react\";\nimport NewPostFilled from \"../modals/NewPostFilled\";\n\nconst CoursePageHeader = ({\n  id,\n  averagesArray,\n  entriesArray,\n  courseName,\n  courseNumber,\n  difficulty,\n  workload,\n  average,\n  repeat,\n  setIsOpen,\n  setFilledForm,\n  setCurrentPageName,\n  isFilledOpen,\n  setIsFilledOpen,\n  isOpen,\n  difficultyArray,\n  workloadArray,\n  coursesArray,\n  profRateArray,\n  facultyArray,\n  courseArray,\n  filledForm,\n  currentPageName,\n  setIsSuccessOpen\n}) => {\n  let averageDifficulty = difficulty / repeat;\n  let averageWorkload = workload / repeat;\n  let averageQuality = average / repeat;\n  let difficultyBar = (averageDifficulty / 5) * 100;\n  let difficultyBarWidth = difficultyBar + \"%\";\n  let workloadBar = (averageWorkload / 5) * 100;\n  let workloadBarWidth = workloadBar + \"%\";\n\n  const difficultyProgressBarStyle = {\n    width: difficultyBarWidth,\n    backgroundColor: \"rgb(140, 0, 255)\",\n    height: \"100%\"\n  };\n\n  const workloadProgressBarStyle = {\n    width: workloadBarWidth,\n    backgroundColor: \"rgb(140, 0, 255)\",\n    height: \"100%\"\n  };\n\n  let qualityClassName = \" col1 cp-overall-rating table\";\n\n  if (averageQuality < 3) {\n    qualityClassName += \" red\";\n  } else if (averageQuality === 3) {\n    qualityClassName += \" yellow\";\n  } else if (averageQuality > 3) {\n    qualityClassName += \" green\";\n  }\n\n  const openFilledFormHander = () => {\n    setIsFilledOpen(true);\n    setFilledForm(true);\n    setCurrentPageName(courseName);\n  };\n\n  return (\n    <React.Fragment>\n      <NewPostFilled\n        isFilledOpen={isFilledOpen}\n        setIsFilledOpen={setIsFilledOpen}\n        open={isOpen}\n        difficultyArray={difficultyArray}\n        courseArray={courseArray}\n        workloadArray={workloadArray}\n        profRateArray={profRateArray}\n        facultyArray={facultyArray}\n        setIsOpen={setIsOpen}\n        entriesArray={entriesArray}\n        coursesArray={coursesArray}\n        filledForm={filledForm}\n        setFilledForm={setFilledForm}\n        currentPageName={currentPageName}\n        id={id}\n        courseName={courseName}\n        courseNumber={courseNumber}\n        setIsSuccessOpen={setIsSuccessOpen}\n        averagesArray={averagesArray}\n      />\n      <div className=\"container\">\n        <div className=\"wrapper course-page-container\">\n          <div className=\"course-page\">\n            <div className=\"row\">\n              <div className=\"col1\">\n                <div className=\"table course-page-title\">\n                  <div className=\"vertical\">\n                    <h2>{id}</h2>\n                    <h3>Simon Fraser University</h3>\n                    <button\n                      className=\"btn coursepage-btn\"\n                      onClick={() => setIsFilledOpen(true)}\n                    >\n                      Review this course\n                    </button>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col1\">\n                <div className=\"table course-page-graph\">\n                  <div className=\"vertical\">\n                    <h3>Average Ratings </h3>\n                    <br />\n                    <div className=\"cp-overall-rating-container row\">\n                      <div className={qualityClassName}>\n                        <div className=\"vertical\">\n                          <h2>{averageQuality.toFixed(1)}</h2>\n                        </div>\n                      </div>\n                      <div className=\"col2 cp-overall-text table\">\n                        <div className=\"vertical\">\n                          <p>\n                            Course quality based on{\" \"}\n                            <span className=\"bold\"> {repeat} review(s)</span>\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                    <p>\n                      <br />\n                      Difficulty:{\" \"}\n                      <span className=\"bold course-page-rating\">\n                        {averageDifficulty.toFixed(1)}\n                      </span>{\" \"}\n                      <span className=\"out-of-five\">/ 5</span>\n                    </p>\n                    <div className=\"progress-bar-border\">\n                      <div style={difficultyProgressBarStyle}></div>\n                    </div>{\" \"}\n                    <br />\n                    <p>\n                      Workload:{\" \"}\n                      <span className=\"bold course-page-rating\">\n                        {averageWorkload.toFixed(1)}\n                      </span>{\" \"}\n                      <span className=\"out-of-five\">/ 5</span>\n                    </p>\n                    <div className=\"progress-bar-border\">\n                      <div style={workloadProgressBarStyle}></div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default CoursePageHeader;\n"]},"metadata":{},"sourceType":"module"}