{"ast":null,"code":"var _jsxFileName = \"/Users/rodericcoscolluela/Documents/password-manager/client/src/components/ResultsPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport ResultsHeader from \"./ResultsHeader\";\nimport SearchEntries from \"./SearchEntries\";\nimport { useHistory } from \"react-router\";\nimport SearchForm from \"./SearchForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ResultsPage = _ref => {\n  _s();\n\n  let {\n    dashboardHeader,\n    resultsHeader,\n    currentSearchValue,\n    entriesArray,\n    averagesArray,\n    searchArray,\n    setSearchName,\n    searchName,\n    setCurrentSearchValue\n  } = _ref;\n  const {\n    id\n  } = useParams();\n  document.title = `Search results for ${id.toString().toUpperCase()}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container results-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-wrapper wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(ResultsHeader, {\n        currentSearchValue: id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchForm, {\n        averagesArray: averagesArray,\n        searchArray: searchArray,\n        currentSearchValue: currentSearchValue,\n        setCurrentSearchValue: setCurrentSearchValue,\n        setSearchName: setSearchName,\n        searchName: searchName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), averagesArray.sort((a, b) => a.course_title < b.course_time ? 1 : -1).filter(entry => {\n        if (!entry.average_title.toString().toLowerCase().includes(id.toString().toLowerCase())) {\n          return null;\n        } else {\n          return entry;\n        }\n      }).map(entry => /*#__PURE__*/_jsxDEV(SearchEntries, {\n        averagesArray: averagesArray,\n        entry: entry\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ResultsPage, \"yQgCIz/jJfqV1l9s2yoba81MT5A=\", false, function () {\n  return [useParams];\n});\n\n_c = ResultsPage;\nexport default ResultsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResultsPage\");","map":{"version":3,"sources":["/Users/rodericcoscolluela/Documents/password-manager/client/src/components/ResultsPage.js"],"names":["React","useEffect","useParams","ResultsHeader","SearchEntries","useHistory","SearchForm","ResultsPage","dashboardHeader","resultsHeader","currentSearchValue","entriesArray","averagesArray","searchArray","setSearchName","searchName","setCurrentSearchValue","id","document","title","toString","toUpperCase","sort","a","b","course_title","course_time","filter","entry","average_title","toLowerCase","includes","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,MAAMC,WAAW,GAAG,QAUd;AAAA;;AAAA,MAVe;AACnBC,IAAAA,eADmB;AAEnBC,IAAAA,aAFmB;AAGnBC,IAAAA,kBAHmB;AAInBC,IAAAA,YAJmB;AAKnBC,IAAAA,aALmB;AAMnBC,IAAAA,WANmB;AAOnBC,IAAAA,aAPmB;AAQnBC,IAAAA,UARmB;AASnBC,IAAAA;AATmB,GAUf;AACJ,QAAM;AAAEC,IAAAA;AAAF,MAASf,SAAS,EAAxB;AAEAgB,EAAAA,QAAQ,CAACC,KAAT,GAAkB,sBAAqBF,EAAE,CAACG,QAAH,GAAcC,WAAd,EAA4B,EAAnE;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,6BAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA,8BACE,QAAC,aAAD;AAAe,QAAA,kBAAkB,EAAEJ;AAAnC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,UAAD;AACE,QAAA,aAAa,EAAEL,aADjB;AAEE,QAAA,WAAW,EAAEC,WAFf;AAGE,QAAA,kBAAkB,EAAEH,kBAHtB;AAIE,QAAA,qBAAqB,EAAEM,qBAJzB;AAKE,QAAA,aAAa,EAAEF,aALjB;AAME,QAAA,UAAU,EAAEC;AANd;AAAA;AAAA;AAAA;AAAA,cAFF,EAWGH,aAAa,CACXU,IADF,CACO,CAACC,CAAD,EAAIC,CAAJ,KAAWD,CAAC,CAACE,YAAF,GAAiBD,CAAC,CAACE,WAAnB,GAAiC,CAAjC,GAAqC,CAAC,CADxD,EAEEC,MAFF,CAEUC,KAAD,IAAW;AACjB,YACE,CAACA,KAAK,CAACC,aAAN,CACET,QADF,GAEEU,WAFF,GAGEC,QAHF,CAGWd,EAAE,CAACG,QAAH,GAAcU,WAAd,EAHX,CADH,EAKE;AACA,iBAAO,IAAP;AACD,SAPD,MAOO;AACL,iBAAOF,KAAP;AACD;AACF,OAbF,EAcEI,GAdF,CAcOJ,KAAD,iBACH,QAAC,aAAD;AAAe,QAAA,aAAa,EAAEhB,aAA9B;AAA6C,QAAA,KAAK,EAAEgB;AAApD;AAAA;AAAA;AAAA;AAAA,cAfH,CAXH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD,CAhDD;;GAAMrB,W;UAWWL,S;;;KAXXK,W;AAkDN,eAAeA,WAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport ResultsHeader from \"./ResultsHeader\";\nimport SearchEntries from \"./SearchEntries\";\nimport { useHistory } from \"react-router\";\nimport SearchForm from \"./SearchForm\";\n\nconst ResultsPage = ({\n  dashboardHeader,\n  resultsHeader,\n  currentSearchValue,\n  entriesArray,\n  averagesArray,\n  searchArray,\n  setSearchName,\n  searchName,\n  setCurrentSearchValue\n}) => {\n  const { id } = useParams();\n\n  document.title = `Search results for ${id.toString().toUpperCase()}`;\n\n  return (\n    <div className=\"container results-container\">\n      <div className=\"results-wrapper wrapper\">\n        <ResultsHeader currentSearchValue={id} />\n        <SearchForm\n          averagesArray={averagesArray}\n          searchArray={searchArray}\n          currentSearchValue={currentSearchValue}\n          setCurrentSearchValue={setCurrentSearchValue}\n          setSearchName={setSearchName}\n          searchName={searchName}\n        />\n\n        {averagesArray\n          .sort((a, b) => (a.course_title < b.course_time ? 1 : -1))\n          .filter((entry) => {\n            if (\n              !entry.average_title\n                .toString()\n                .toLowerCase()\n                .includes(id.toString().toLowerCase())\n            ) {\n              return null;\n            } else {\n              return entry;\n            }\n          })\n          .map((entry) => (\n            <SearchEntries averagesArray={averagesArray} entry={entry} />\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ResultsPage;\n"]},"metadata":{},"sourceType":"module"}