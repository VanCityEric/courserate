{"ast":null,"code":"var _jsxFileName = \"/Users/rodericcoscolluela/Documents/course-rate/client/src/components/CoursePageHeader.js\";\nimport { faBackspace } from \"@fortawesome/free-solid-svg-icons\";\nimport React from \"react\";\nimport NewPostFilled from \"../modals/NewPostFilled\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CoursePageHeader = _ref => {\n  let {\n    id,\n    averagesArray,\n    entriesArray,\n    courseName,\n    courseNumber,\n    difficulty,\n    workload,\n    average,\n    repeat,\n    setIsOpen,\n    setFilledForm,\n    setCurrentPageName,\n    isFilledOpen,\n    setIsFilledOpen,\n    isOpen,\n    difficultyArray,\n    workloadArray,\n    coursesArray,\n    profRateArray,\n    facultyArray,\n    courseArray,\n    filledForm,\n    currentPageName,\n    setIsSuccessOpen\n  } = _ref;\n  let averageDifficulty = difficulty / repeat;\n  let averageWorkload = workload / repeat;\n  let averageQuality = average / repeat;\n  let difficultyBar = averageDifficulty / 5 * 100;\n  let difficultyBarWidth = difficultyBar + \"%\";\n  let workloadBar = averageWorkload / 5 * 100;\n  let workloadBarWidth = workloadBar + \"%\";\n  const difficultyProgressBarStyle = {\n    width: difficultyBarWidth,\n    backgroundColor: \"rgb(140, 0, 255)\",\n    height: \"100%\"\n  };\n  const workloadProgressBarStyle = {\n    width: workloadBarWidth,\n    backgroundColor: \"rgb(140, 0, 255)\",\n    height: \"100%\"\n  };\n  let qualityClassName = \" col1 cp-overall-rating table\";\n\n  if (averageQuality < 3) {\n    qualityClassName += \" red\";\n  } else if (averageQuality === 3) {\n    qualityClassName += \" yellow\";\n  } else if (averageQuality > 3) {\n    qualityClassName += \" green\";\n  }\n\n  const openFilledFormHander = () => {\n    setIsFilledOpen(true);\n    setFilledForm(true);\n    setCurrentPageName(courseName);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NewPostFilled, {\n      isFilledOpen: isFilledOpen,\n      setIsFilledOpen: setIsFilledOpen,\n      open: isOpen,\n      difficultyArray: difficultyArray,\n      courseArray: courseArray,\n      workloadArray: workloadArray,\n      profRateArray: profRateArray,\n      facultyArray: facultyArray,\n      setIsOpen: setIsOpen,\n      entriesArray: entriesArray,\n      coursesArray: coursesArray,\n      filledForm: filledForm,\n      setFilledForm: setFilledForm,\n      currentPageName: currentPageName,\n      courseArray: courseArray,\n      id: id,\n      courseName: courseName,\n      courseNumber: courseNumber,\n      setIsSuccessOpen: setIsSuccessOpen,\n      averagesArray: averagesArray\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrapper course-page-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"course-page\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col1\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"table course-page-title\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"vertical\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                    children: id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: \"Simon Fraser University\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn coursepage-btn\",\n                    onClick: () => setIsFilledOpen(true),\n                    children: \"Review this course\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col1\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"table course-page-graph\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"vertical\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: \"Average Ratings \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 113,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"cp-overall-rating-container row\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: qualityClassName,\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"vertical\",\n                        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                          children: averageQuality.toFixed(1)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 117,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 116,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 115,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"col2 cp-overall-text table\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"vertical\",\n                        children: /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: [\"Course quality based on\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"bold\",\n                            children: [\" \", repeat, \" review(s)\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 124,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 122,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 121,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 120,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 114,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 130,\n                      columnNumber: 23\n                    }, this), \"Difficulty:\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"bold course-page-rating\",\n                      children: averageDifficulty.toFixed(1)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 132,\n                      columnNumber: 23\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"out-of-five\",\n                      children: \"/ 5\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 135,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"progress-bar-border\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: difficultyProgressBarStyle\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 138,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 137,\n                    columnNumber: 21\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 140,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Workload:\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"bold course-page-rating\",\n                      children: averageWorkload.toFixed(1)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 143,\n                      columnNumber: 23\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"out-of-five\",\n                      children: \"/ 5\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 146,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 141,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"progress-bar-border\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: workloadProgressBarStyle\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 149,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CoursePageHeader;\nexport default CoursePageHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoursePageHeader\");","map":{"version":3,"sources":["/Users/rodericcoscolluela/Documents/course-rate/client/src/components/CoursePageHeader.js"],"names":["faBackspace","React","NewPostFilled","CoursePageHeader","id","averagesArray","entriesArray","courseName","courseNumber","difficulty","workload","average","repeat","setIsOpen","setFilledForm","setCurrentPageName","isFilledOpen","setIsFilledOpen","isOpen","difficultyArray","workloadArray","coursesArray","profRateArray","facultyArray","courseArray","filledForm","currentPageName","setIsSuccessOpen","averageDifficulty","averageWorkload","averageQuality","difficultyBar","difficultyBarWidth","workloadBar","workloadBarWidth","difficultyProgressBarStyle","width","backgroundColor","height","workloadProgressBarStyle","qualityClassName","openFilledFormHander","toFixed"],"mappings":"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","sourcesContent":["import { faBackspace } from \"@fortawesome/free-solid-svg-icons\";\nimport React from \"react\";\nimport NewPostFilled from \"../modals/NewPostFilled\";\n\nconst CoursePageHeader = ({\n  id,\n  averagesArray,\n  entriesArray,\n  courseName,\n  courseNumber,\n  difficulty,\n  workload,\n  average,\n  repeat,\n  setIsOpen,\n  setFilledForm,\n  setCurrentPageName,\n  isFilledOpen,\n  setIsFilledOpen,\n  isOpen,\n  difficultyArray,\n  workloadArray,\n  coursesArray,\n  profRateArray,\n  facultyArray,\n  courseArray,\n  filledForm,\n  currentPageName,\n  setIsSuccessOpen\n}) => {\n  let averageDifficulty = difficulty / repeat;\n  let averageWorkload = workload / repeat;\n  let averageQuality = average / repeat;\n  let difficultyBar = (averageDifficulty / 5) * 100;\n  let difficultyBarWidth = difficultyBar + \"%\";\n  let workloadBar = (averageWorkload / 5) * 100;\n  let workloadBarWidth = workloadBar + \"%\";\n\n  const difficultyProgressBarStyle = {\n    width: difficultyBarWidth,\n    backgroundColor: \"rgb(140, 0, 255)\",\n    height: \"100%\"\n  };\n\n  const workloadProgressBarStyle = {\n    width: workloadBarWidth,\n    backgroundColor: \"rgb(140, 0, 255)\",\n    height: \"100%\"\n  };\n\n  let qualityClassName = \" col1 cp-overall-rating table\";\n\n  if (averageQuality < 3) {\n    qualityClassName += \" red\";\n  } else if (averageQuality === 3) {\n    qualityClassName += \" yellow\";\n  } else if (averageQuality > 3) {\n    qualityClassName += \" green\";\n  }\n\n  const openFilledFormHander = () => {\n    setIsFilledOpen(true);\n    setFilledForm(true);\n    setCurrentPageName(courseName);\n  };\n\n  return (\n    <React.Fragment>\n      <NewPostFilled\n        isFilledOpen={isFilledOpen}\n        setIsFilledOpen={setIsFilledOpen}\n        open={isOpen}\n        difficultyArray={difficultyArray}\n        courseArray={courseArray}\n        workloadArray={workloadArray}\n        profRateArray={profRateArray}\n        facultyArray={facultyArray}\n        setIsOpen={setIsOpen}\n        entriesArray={entriesArray}\n        coursesArray={coursesArray}\n        filledForm={filledForm}\n        setFilledForm={setFilledForm}\n        currentPageName={currentPageName}\n        courseArray={courseArray}\n        id={id}\n        courseName={courseName}\n        courseNumber={courseNumber}\n        setIsSuccessOpen={setIsSuccessOpen}\n        averagesArray={averagesArray}\n      />\n      <div className=\"container\">\n        <div className=\"wrapper course-page-container\">\n          <div className=\"course-page\">\n            <div className=\"row\">\n              <div className=\"col1\">\n                <div className=\"table course-page-title\">\n                  <div className=\"vertical\">\n                    <h2>{id}</h2>\n                    <h3>Simon Fraser University</h3>\n                    <button\n                      className=\"btn coursepage-btn\"\n                      onClick={() => setIsFilledOpen(true)}\n                    >\n                      Review this course\n                    </button>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col1\">\n                <div className=\"table course-page-graph\">\n                  <div className=\"vertical\">\n                    <h3>Average Ratings </h3>\n                    <br />\n                    <div className=\"cp-overall-rating-container row\">\n                      <div className={qualityClassName}>\n                        <div className=\"vertical\">\n                          <h2>{averageQuality.toFixed(1)}</h2>\n                        </div>\n                      </div>\n                      <div className=\"col2 cp-overall-text table\">\n                        <div className=\"vertical\">\n                          <p>\n                            Course quality based on{\" \"}\n                            <span className=\"bold\"> {repeat} review(s)</span>\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                    <p>\n                      <br />\n                      Difficulty:{\" \"}\n                      <span className=\"bold course-page-rating\">\n                        {averageDifficulty.toFixed(1)}\n                      </span>{\" \"}\n                      <span className=\"out-of-five\">/ 5</span>\n                    </p>\n                    <div className=\"progress-bar-border\">\n                      <div style={difficultyProgressBarStyle}></div>\n                    </div>{\" \"}\n                    <br />\n                    <p>\n                      Workload:{\" \"}\n                      <span className=\"bold course-page-rating\">\n                        {averageWorkload.toFixed(1)}\n                      </span>{\" \"}\n                      <span className=\"out-of-five\">/ 5</span>\n                    </p>\n                    <div className=\"progress-bar-border\">\n                      <div style={workloadProgressBarStyle}></div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default CoursePageHeader;\n"]},"metadata":{},"sourceType":"module"}