[{"/Users/rodericcoscolluela/Documents/password-manager/client/src/index.js":"1","/Users/rodericcoscolluela/Documents/password-manager/client/src/App.js":"2","/Users/rodericcoscolluela/Documents/password-manager/client/src/reportWebVitals.js":"3","/Users/rodericcoscolluela/Documents/password-manager/client/src/modals/PostSuccess.js":"4","/Users/rodericcoscolluela/Documents/password-manager/client/src/components/Dashboard.js":"5","/Users/rodericcoscolluela/Documents/password-manager/client/src/components/ResultsPage.js":"6","/Users/rodericcoscolluela/Documents/password-manager/client/src/components/CoursePage.js":"7","/Users/rodericcoscolluela/Documents/password-manager/client/src/components/Nav.js":"8","/Users/rodericcoscolluela/Documents/password-manager/client/src/components/Entries.js":"9","/Users/rodericcoscolluela/Documents/password-manager/client/src/components/Tags.js":"10","/Users/rodericcoscolluela/Documents/password-manager/client/src/components/ResultsHeader.js":"11","/Users/rodericcoscolluela/Documents/password-manager/client/src/components/DashboardHeader.js":"12","/Users/rodericcoscolluela/Documents/password-manager/client/src/components/SearchForm.js":"13","/Users/rodericcoscolluela/Documents/password-manager/client/src/components/SearchEntries.js":"14","/Users/rodericcoscolluela/Documents/password-manager/client/src/modals/NewPost.js":"15","/Users/rodericcoscolluela/Documents/password-manager/client/src/components/CoursePageHeader.js":"16","/Users/rodericcoscolluela/Documents/password-manager/client/src/components/NewPostForm.js":"17","/Users/rodericcoscolluela/Documents/password-manager/client/src/components/SearchDropdown.js":"18","/Users/rodericcoscolluela/Documents/password-manager/client/src/modals/NewPostFilled.js":"19","/Users/rodericcoscolluela/Documents/password-manager/client/src/components/NewPostFormFilled.js":"20"},{"size":544,"mtime":1645839640034,"results":"21","hashOfConfig":"22"},{"size":7479,"mtime":1645923089304,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1644380790794,"results":"24","hashOfConfig":"22"},{"size":621,"mtime":1645837500956,"results":"25","hashOfConfig":"22"},{"size":2430,"mtime":1645742717021,"results":"26","hashOfConfig":"22"},{"size":1534,"mtime":1645742178511,"results":"27","hashOfConfig":"22"},{"size":3278,"mtime":1645837609081,"results":"28","hashOfConfig":"22"},{"size":1976,"mtime":1645837178584,"results":"29","hashOfConfig":"22"},{"size":3843,"mtime":1645592363882,"results":"30","hashOfConfig":"22"},{"size":149,"mtime":1645394974583,"results":"31","hashOfConfig":"22"},{"size":390,"mtime":1645135748445,"results":"32","hashOfConfig":"22"},{"size":811,"mtime":1645333784538,"results":"33","hashOfConfig":"22"},{"size":2049,"mtime":1645842032762,"results":"34","hashOfConfig":"22"},{"size":1577,"mtime":1645742402698,"results":"35","hashOfConfig":"22"},{"size":1122,"mtime":1645837199418,"results":"36","hashOfConfig":"22"},{"size":5048,"mtime":1645837629653,"results":"37","hashOfConfig":"22"},{"size":13977,"mtime":1645923053020,"results":"38","hashOfConfig":"22"},{"size":360,"mtime":1645133215209,"results":"39","hashOfConfig":"22"},{"size":1479,"mtime":1645837645404,"results":"40","hashOfConfig":"22"},{"size":13084,"mtime":1645923072763,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1u6b67",{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/rodericcoscolluela/Documents/password-manager/client/src/index.js",[],[],"/Users/rodericcoscolluela/Documents/password-manager/client/src/App.js",["112","113"],[],"/Users/rodericcoscolluela/Documents/password-manager/client/src/reportWebVitals.js",[],[],"/Users/rodericcoscolluela/Documents/password-manager/client/src/modals/PostSuccess.js",[],[],"/Users/rodericcoscolluela/Documents/password-manager/client/src/components/Dashboard.js",["114","115"],[],"import React, { useEffect } from \"react\";\nimport DashboardHeader from \"./DashboardHeader\";\nimport SearchForm from \"./SearchForm\";\nimport Entries from \"./Entries\";\nimport Tags from \"./Tags\";\n\nconst Dashboard = ({\n  dashboardHeader,\n  entriesArray,\n  averagesArray,\n  searchArray,\n  setResultsHeader,\n  setEntriesArray,\n  currentSearchValue,\n  searchName,\n  setSearchName,\n  setCurrentSearchValue\n}) => {\n\n  return (\n    <React.Fragment>\n      <div className=\"dashboard-container container\">\n        <div className=\"dashboard-wrapper wrapper\">\n          <DashboardHeader dashboardHeader={dashboardHeader} />\n          <SearchForm\n            averagesArray={averagesArray}\n            searchArray={searchArray}\n            setResultsHeader={setResultsHeader}\n            currentSearchValue={currentSearchValue}\n            setCurrentSearchValue={setCurrentSearchValue}\n            setSearchName={setSearchName}\n            searchName={searchName}\n          />\n          <div className=\"recent-container\">\n            <h2 className=\"recent-text\">Recent Reviews</h2>\n            <div className=\"recent-entries-container\">\n              {entriesArray\n                .sort((a, b) => (a.course_time < b.course_time ? 1 : -1))\n                .map((entry) => (\n                  <Entries\n                    courseName={entry.course_name}\n                    courseNumber={entry.course_number}\n                    professor={entry.course_prof}\n                    difficulty={entry.course_difficulty}\n                    workload={entry.course_workload}\n                    profRating={entry.course_prof_rating}\n                    comments={entry.course_comment}\n                    faculty={entry.course_faculty}\n                    day={entry.course_day}\n                    month={entry.course_month}\n                    year={entry.course_year}\n                    time={entry.course_time}\n                    title={entry.course_title}\n                    courseLike={entry.course_quality}\n                    grade={entry.course_grade}\n                    tag1={entry.course_tag1}\n                    tag2={entry.course_tag2}\n                    tag3={entry.course_tag3}\n                    entriesArray={entriesArray}\n                    averagesArray={averagesArray}\n                  />\n                ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Dashboard;\n","/Users/rodericcoscolluela/Documents/password-manager/client/src/components/ResultsPage.js",["116","117"],[],"import React, { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport ResultsHeader from \"./ResultsHeader\";\nimport SearchEntries from \"./SearchEntries\";\nimport { useHistory } from \"react-router\";\nimport SearchForm from \"./SearchForm\";\n\nconst ResultsPage = ({\n  dashboardHeader,\n  resultsHeader,\n  currentSearchValue,\n  entriesArray,\n  averagesArray,\n  searchArray,\n  setSearchName,\n  searchName,\n  setCurrentSearchValue\n}) => {\n  const { id } = useParams();\n\n  document.title = `Search results for ${id.toString().toUpperCase()}`;\n\n  return (\n    <div className=\"container results-container\">\n      <div className=\"results-wrapper wrapper\">\n        <ResultsHeader currentSearchValue={id} />\n        <SearchForm\n            averagesArray={averagesArray}\n            searchArray={searchArray}\n            currentSearchValue={currentSearchValue}\n            setCurrentSearchValue={setCurrentSearchValue}\n            setSearchName={setSearchName}\n            searchName={searchName}\n          />\n\n        {averagesArray\n          .filter((entry) => {\n            if (\n              !entry.average_title\n                .toString()\n                .toLowerCase()\n                .includes(id.toString().toLowerCase())\n            ) {\n              return null;\n            } else {\n              return entry;\n            }\n          })\n          .map((entry) => (\n            <SearchEntries averagesArray={averagesArray} entry={entry} />\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ResultsPage;\n","/Users/rodericcoscolluela/Documents/password-manager/client/src/components/CoursePage.js",[],[],"/Users/rodericcoscolluela/Documents/password-manager/client/src/components/Nav.js",["118","119"],[],"import React, { useState } from \"react\";\nimport logo from \"../logo.png\";\nimport NewPost from \"../modals/NewPost\";\nimport { useNavigate } from \"react-router-dom\";\nimport SearchForm from \"./SearchForm\";\n\nconst Nav = ({\n  difficultyArray,\n  courseArray,\n  workloadArray,\n  profRateArray,\n  facultyArray,\n  setDashboardHeader,\n  setCourseName,\n  setEntriesArray,\n  entriesArray,\n  courseName,\n  courseNumber,\n  setCourseNumber,\n  professor,\n  setProfessor,\n  difficulty,\n  setDifficulty,\n  workload,\n  setWorkload,\n  profRating,\n  setProfRating,\n  comments,\n  setComments,\n  faculty,\n  setFaculty,\n  courseLike,\n  setCourseLike,\n  coursesArray,\n  setCoursesArray,\n  averagesArray,\n  setAveragesArray,\n  searchArray,\n  setSearchArray,\n  isOpen,\n  setIsOpen,\n  filledForm,\n  setFilledForm,\n  currentPageName,\n  setIsSuccessOpen\n}) => {\n  const navigate = useNavigate();\n  const homeHandler = () => {\n    navigate(\"/\");\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"nav-container\">\n        <nav>\n          <div>\n            <img className=\"logo\" src={logo} alt=\"logo\" />\n          </div>\n\n          <ul className=\"nav-links\">\n            <li onClick={() => homeHandler()}>Home</li>\n            <li onClick={() => setDashboardHeader(\"Login\")}>Login</li>\n            <button className=\"btn post-btn\" onClick={() => setIsOpen(true)}>\n              Post a Review\n            </button>\n          </ul>\n        </nav>\n      </div>\n      <NewPost\n        open={isOpen}\n        difficultyArray={difficultyArray}\n        courseArray={courseArray}\n        workloadArray={workloadArray}\n        profRateArray={profRateArray}\n        facultyArray={facultyArray}\n        setIsOpen={setIsOpen}\n        entriesArray={entriesArray}\n        coursesArray={coursesArray}\n        filledForm={filledForm}\n        setFilledForm={setFilledForm}\n        currentPageName={currentPageName}\n        setIsSuccessOpen={ setIsSuccessOpen}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default Nav;\n","/Users/rodericcoscolluela/Documents/password-manager/client/src/components/Entries.js",["120"],[],"import React, { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Entries = ({\n  courseName,\n  courseNumber,\n  professor,\n  difficulty,\n  workload,\n  profRating,\n  comments,\n  faculty,\n  courseLike,\n  day,\n  month,\n  year,\n  time,\n  title,\n  grade,\n  tag1,\n  tag2,\n  tag3,\n  averagesArray,\n  entriesArray\n}) => {\n\n\n  const monthNames = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\"\n  ];\n\n  let qualityClassName = \"thumbs table\";\n  let difficultyClassName = \"thumbs table\";\n  let workloadClassName = \"thumbs table\";\n\n  let userScore = courseLike.toFixed(1);\n  let difficultyScore = difficulty.toFixed(1);\n  let workloadScore = workload.toFixed(1);\n\n  if (courseLike < 3) {\n    qualityClassName += \" red\";\n  } else if (courseLike === 3) {\n    qualityClassName += \" yellow\";\n  } else if (courseLike > 3) {\n    qualityClassName += \" green\";\n  }\n\n  // if (difficultyScore > 3) {\n  //   difficultyClassName += \" red\";\n  // } else if (difficultyScore == 3) {\n  //   difficultyClassName += \" yellow\";\n  // } else if (difficultyScore < 3) {\n  //   difficultyClassName += \" green\";\n  // }\n\n  // if (workloadScore > 3) {\n  //   workloadClassName += \" red\";\n  // } else if (workloadScore == 3) {\n  //   workloadClassName += \" yellow\";\n  // } else if (workloadScore < 3) {\n  //   workloadClassName += \" green\";\n  // }\n\n  const navigate = useNavigate();\n  const courseClickHandler = (e) => {\n    e.preventDefault();\n    navigate(`/course/${title}`);\n  };\n\n  return (\n    <div className=\"recent-entries entries row section-wrapper\">\n      <div className=\"review-like-section col1\">\n        <p className=\"average-rating\">QUALITY</p>\n        <div className={qualityClassName}>\n          <div className=\"vertical\">\n            <div>{userScore}</div>\n          </div>\n        </div>\n\n        <p className=\"average-rating margin-top\">DIFFICULTY </p>\n        <div className={difficultyClassName}>\n          <div className=\"vertical\">\n            <div>{difficultyScore}</div>\n          </div>\n        </div>\n        <p className=\"average-rating margin-top\">WORKLOAD </p>\n        <div className={workloadClassName}>\n          <div className=\"vertical\">\n            <div>{workloadScore}</div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"review-text-section col2\">\n        <div className=\"review-top-row\">\n          <div className=\"row\">\n            <div className=\"review-course-name col1\">\n              <h2 onClick={(e) => courseClickHandler(e)}>\n                {courseName} {courseNumber}\n              </h2>\n            </div>\n            <div className=\"review-date col2\">\n              <p className=\"date\">\n                {monthNames[month]} {day}, {year}\n              </p>\n            </div>\n          </div>\n          <div className=\"row review-middle-row\">\n            <p>\n              Professor: <span className=\"bold\">{professor}</span>\n            </p>\n\n            <br />\n            <p>\n              <span className=\"bold\">Comment:</span>\n            </p>\n            <p>{comments}</p>\n          </div>\n          <span className=\"entry-tags\">{tag1}</span>\n          <span className=\"entry-tags\">{tag2}</span>\n          <span className=\"entry-tags\">{tag3}</span>\n          <div className=\"bottom-row-container\">\n            <div className=\"row review-bottom-row\">\n              <div className=\"col2\">\n                <p>\n                  Major: <span className=\"bold\">{faculty}</span>\n                </p>\n              </div>\n              <div className=\"col2\">\n                <p>\n                  Grade received: <span className=\"bold\">{grade}</span>\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Entries;\n","/Users/rodericcoscolluela/Documents/password-manager/client/src/components/Tags.js",[],[],"/Users/rodericcoscolluela/Documents/password-manager/client/src/components/ResultsHeader.js",["121"],[],"import React from \"react\";\nimport SearchForm from \"./SearchForm\";\n\nconst ResultsHeader = ({ resultsHeader, currentSearchValue }) => {\n  return (\n    <div className=\"results-header-container header\">\n      <h2 class=\"search-results-header\">\n        Search results for <span className=\"bold\"> \"{currentSearchValue}\"</span>\n      </h2>\n      \n    </div>\n  );\n};\n\nexport default ResultsHeader;\n","/Users/rodericcoscolluela/Documents/password-manager/client/src/components/DashboardHeader.js",[],[],"/Users/rodericcoscolluela/Documents/password-manager/client/src/components/SearchForm.js",["122","123","124","125","126","127","128","129"],[],"import React, { useState, useEffect } from \"react\";\nimport SearchDropdown from \"./SearchDropdown\";\nimport { useNavigate } from \"react-router-dom\";\nimport NewPage from \"./ResultsPage\";\n\nconst SearchForm = ({\n  searchArray,\n  currentSearchValue,\n  setCurrentSearchValue,\n  searchName,\n  setSearchName,\n  averagesArray\n}) => {\n  const [query, setQuery] = useState(\"\");\n  const [searchFound, setSearchFound] = useState(\"\");\n  const [index, setIndex] = useState();\n  let className = \"search-dropdown-container\";\n\n  const queryHandler = (e) => {\n    setCurrentSearchValue(e.target.value);\n    setQuery(e.target.value);\n    setSearchName(e.target.value);\n\n    if (e.target.value === \"\") {\n      setSearchFound(\"\");\n    }\n  };\n\n  const [active, setActive] = useState(0);\n\n  const navigate = useNavigate();\n  const searchHandler = (e) => {\n    e.preventDefault();\n    let input = document.getElementById(\"search-form\");\n    input[0].value = \"\";\n    if (\n      averagesArray.some(\n        (entry) =>\n          entry.average_title.toString().toLowerCase() ===\n          query.toLowerCase()\n      ) ||\n      averagesArray.some(\n        (entry) =>\n          entry.average_name.toLowerCase() === query.toLowerCase()\n      ) ||\n      averagesArray.some((entry) => entry.average_number.toString() === query.toString())\n    ) {\n      setSearchFound(\"\");\n      navigate(`/search/${searchName}`);\n    } else {\n      setSearchFound(\n        \"Sorry, course not found. Add a course by submitting a review.\"\n      );\n    }\n  };\n  return (\n    <div className=\"dashboard-search\">\n      <form id=\"search-form\">\n        <label htmlFor=\"search-bar\">Search for a course</label>\n        <input\n          onChange={queryHandler}\n          id=\"search-bar\"\n          className=\"input\"\n          placeholder='e.g. \"MACM 201\", \"MACM\", or \"201\"'\n        ></input>\n        <button onClick={searchHandler} className=\"search-button btn\">\n          Search\n        </button>\n        <p className=\"search-error\">{searchFound}</p>\n      </form>\n    </div>\n  );\n};\n\nexport default SearchForm;\n","/Users/rodericcoscolluela/Documents/password-manager/client/src/components/SearchEntries.js",["130"],[],"import React from 'react'\nimport Entries from './Entries'\nimport { useNavigate } from \"react-router-dom\";\n\n\n\nconst SearchEntries = ({averagesArray, entry, searchArray, setSearchName}) => {\n    let averageNum = entry.average_avg;\n    let repeatedTimes = entry.average_repeat;\n    let averageSum = (averageNum/repeatedTimes).toFixed(1);\n    let className = 'average-circle';\n    if(averageSum < 3) {\n        className += ' red';\n      } else if (averageSum === 3) {\n        className += ' yellow';\n      } else if (averageSum > 3) {\n        className += ' green';\n      }\n\nconst navigate = useNavigate();\nconst searchClickHandler = (e) => {\n    e.preventDefault();\n    navigate(`/course/${(entry.average_title)}`);\n}\n\n  return (\n    <div className=\"search-entries-container\" onClick={(e) => searchClickHandler(e)} >\n        <div className=\"entries table\">\n            <div className=\"row vertical\">\n                <div className='col2'>\n                    <div className=\"\">\n                        <div className={className}>\n                            {averageSum}\n                        </div>\n                        <p class=\"num-of-ratings\">{entry.average_repeat} review(s)</p>\n                    </div>\n                </div>\n                 <div className='col1'>\n                    <div className=\"vertical\">\n                        <h2 className=\"search-entry-title\">{entry.average_name} {entry.average_number}</h2>\n                    </div>\n                </div>\n               \n            </div>\n        </div>\n    </div>\n  )\n}\n\nexport default SearchEntries","/Users/rodericcoscolluela/Documents/password-manager/client/src/modals/NewPost.js",[],[],"/Users/rodericcoscolluela/Documents/password-manager/client/src/components/CoursePageHeader.js",["131","132","133"],[],"import { faBackspace } from \"@fortawesome/free-solid-svg-icons\";\nimport React from \"react\";\nimport NewPostFilled from \"../modals/NewPostFilled\";\n\nconst CoursePageHeader = ({\n  id,\n  averagesArray,\n  entriesArray,\n  courseName,\n  courseNumber,\n  difficulty,\n  workload,\n  average,\n  repeat,\n  setIsOpen,\n  setFilledForm,\n  setCurrentPageName,\n  isFilledOpen,\n  setIsFilledOpen,\n  isOpen,\n  difficultyArray,\n  workloadArray,\n  coursesArray,\n  profRateArray,\n  facultyArray,\n  courseArray,\n  filledForm,\n  currentPageName,\n  setIsSuccessOpen\n\n}) => {\n  let averageDifficulty = difficulty / repeat;\n  let averageWorkload = workload / repeat;\n  let averageQuality = average / repeat;\n  let difficultyBar = (averageDifficulty / 5) * 100;\n  let difficultyBarWidth = difficultyBar + \"%\";\n  let workloadBar = (averageWorkload / 5) * 100;\n  let workloadBarWidth = workloadBar + \"%\";\n\n  const difficultyProgressBarStyle = {\n    width: difficultyBarWidth,\n    backgroundColor: \"rgb(140, 0, 255)\",\n    height: \"100%\"\n  };\n\n  const workloadProgressBarStyle = {\n    width: workloadBarWidth,\n    backgroundColor: \"rgb(140, 0, 255)\",\n    height: \"100%\"\n  };\n\n  let qualityClassName = \" col1 cp-overall-rating table\";\n\n  if (averageQuality < 3) {\n    qualityClassName += \" red\";\n  } else if (averageQuality === 3) {\n    qualityClassName += \" yellow\";\n  } else if (averageQuality > 3) {\n    qualityClassName += \" green\";\n  }\n\n  const openFilledFormHander = () => {\n    setIsFilledOpen(true);\n    setFilledForm(true);\n    setCurrentPageName(courseName);\n  };\n\n  return (\n    <React.Fragment>\n      <NewPostFilled\n        isFilledOpen={isFilledOpen}\n        setIsFilledOpen={setIsFilledOpen}\n        open={isOpen}\n        difficultyArray={difficultyArray}\n        courseArray={courseArray}\n        workloadArray={workloadArray}\n        profRateArray={profRateArray}\n        facultyArray={facultyArray}\n        setIsOpen={setIsOpen}\n        entriesArray={entriesArray}\n        coursesArray={coursesArray}\n        filledForm={filledForm}\n        setFilledForm={setFilledForm}\n        currentPageName={currentPageName}\n        courseArray={courseArray}\n        id={id}\n        courseName={courseName}\n        courseNumber={courseNumber}\n        setIsSuccessOpen={ setIsSuccessOpen}\n      />\n      <div className=\"container\">\n        <div className=\"wrapper course-page-container\">\n          <div className=\"course-page\">\n            <div className=\"row\">\n              <div className=\"col1\">\n                <div className=\"table course-page-title\">\n                  <div className=\"vertical\">\n                    <h2>{id}</h2>\n                    <h3>Simon Fraser University</h3>\n                    <button\n                      className=\"btn coursepage-btn\"\n                      onClick={() => setIsFilledOpen(true)}\n                    >\n                      Review this course\n                    </button>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col1\">\n                <div className=\"table course-page-graph\">\n                  <div className=\"vertical\">\n                    <h3>Average Ratings </h3>\n                    <br />\n                    <div className=\"cp-overall-rating-container row\">\n                      <div className={qualityClassName}>\n                        <div className=\"vertical\">\n                          <h2>{averageQuality.toFixed(1)}</h2>\n                        </div>\n                      </div>\n                      <div className=\"col2 cp-overall-text table\">\n                        <div className=\"vertical\">\n                          <p>\n                            Course quality based on{\" \"}\n                            <span className=\"bold\"> {repeat} review(s)</span>\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                    <p>\n                      <br />\n                      Difficulty:{\" \"}\n                      <span className=\"bold course-page-rating\">\n                        {averageDifficulty.toFixed(1)}\n                      </span>{\" \"}\n                      <span className=\"out-of-five\">/ 5</span>\n                    </p>\n                    <div className=\"progress-bar-border\">\n                      <div style={difficultyProgressBarStyle}></div>\n                    </div>{\" \"}\n                    <br />\n                    <p>\n                      Workload:{\" \"}\n                      <span className=\"bold course-page-rating\">\n                        {averageWorkload.toFixed(1)}\n                      </span>{\" \"}\n                      <span className=\"out-of-five\">/ 5</span>\n                    </p>\n                    <div className=\"progress-bar-border\">\n                      <div style={workloadProgressBarStyle}></div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default CoursePageHeader;\n","/Users/rodericcoscolluela/Documents/password-manager/client/src/components/NewPostForm.js",["134","135"],[],"/Users/rodericcoscolluela/Documents/password-manager/client/src/components/SearchDropdown.js",["136"],[],"import React from \"react\";\n\nconst SearchDropdown = ({\n  entry,\n  setDashboardHeader,\n  active,\n  i,\n  setIndex,\n  searchArray\n}) => {\n  const pageHandler = () => {\n    setDashboardHeader(entry.courseTitle);\n  };\n  setIndex(i);\n\n  return (\n    <div>\n      <ul>\n        <li>{entry.courseTitle}</li>\n      </ul>\n    </div>\n  );\n};\n\nexport default SearchDropdown;\n","/Users/rodericcoscolluela/Documents/password-manager/client/src/modals/NewPostFilled.js",["137"],[],"import React from \"react\";\nimport NewPostFormFilled from \"../components/NewPostFormFilled\";\n\nconst NewPostFilled = ({\n  isFilledOpen,\n  setIsFilledOpen,\n  open,\n  difficultyArray,\n  courseArray,\n  workloadArray,\n  profRateArray,\n  facultyArray,\n  setIsOpen,\n  entriesArray,\n  coursesArray,\n  filledForm,\n  setFilledForm,\n  currentPageName,\n  id,\n  courseName,\n  courseNumber,\n  setIsSuccessOpen\n}) => {\n  if (!isFilledOpen) return null;\n  return (\n    <div className=\"add-category-container dim\">\n      <div className=\"add-category-wrapper vertical-center\">\n        <div className=\"add-category modal\">\n          <h3 className=\"modal-title\">Post a review for {id}</h3>\n          <NewPostFormFilled\n            difficultyArray={difficultyArray}\n            courseArray={coursesArray}\n            workloadArray={workloadArray}\n            profRateArray={profRateArray}\n            facultyArray={facultyArray}\n            setIsOpen={setIsOpen}\n            entriesArray={entriesArray}\n            filledForm={filledForm}\n            setFilledForm={setFilledForm}\n            currentPageName={currentPageName}\n            courseArray={courseArray}\n            id={id}\n            currentCourseName={courseName}\n            currentCourseNumber={courseNumber}\n            isFilledOpen={isFilledOpen}\n            setIsFilledOpen={setIsFilledOpen}\n            setIsSuccessOpen={ setIsSuccessOpen}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NewPostFilled;\n","/Users/rodericcoscolluela/Documents/password-manager/client/src/components/NewPostFormFilled.js",["138","139","140","141","142"],[],{"ruleId":"143","severity":1,"message":"144","line":9,"column":3,"nodeType":"145","messageId":"146","endLine":9,"endColumn":12},{"ruleId":"143","severity":1,"message":"147","line":11,"column":8,"nodeType":"145","messageId":"146","endLine":11,"endColumn":15},{"ruleId":"143","severity":1,"message":"148","line":1,"column":17,"nodeType":"145","messageId":"146","endLine":1,"endColumn":26},{"ruleId":"143","severity":1,"message":"149","line":5,"column":8,"nodeType":"145","messageId":"146","endLine":5,"endColumn":12},{"ruleId":"143","severity":1,"message":"148","line":1,"column":17,"nodeType":"145","messageId":"146","endLine":1,"endColumn":26},{"ruleId":"143","severity":1,"message":"150","line":5,"column":10,"nodeType":"145","messageId":"146","endLine":5,"endColumn":20},{"ruleId":"143","severity":1,"message":"151","line":1,"column":17,"nodeType":"145","messageId":"146","endLine":1,"endColumn":25},{"ruleId":"143","severity":1,"message":"152","line":5,"column":8,"nodeType":"145","messageId":"146","endLine":5,"endColumn":18},{"ruleId":"143","severity":1,"message":"148","line":1,"column":17,"nodeType":"145","messageId":"146","endLine":1,"endColumn":26},{"ruleId":"143","severity":1,"message":"152","line":2,"column":8,"nodeType":"145","messageId":"146","endLine":2,"endColumn":18},{"ruleId":"143","severity":1,"message":"148","line":1,"column":27,"nodeType":"145","messageId":"146","endLine":1,"endColumn":36},{"ruleId":"143","severity":1,"message":"153","line":2,"column":8,"nodeType":"145","messageId":"146","endLine":2,"endColumn":22},{"ruleId":"143","severity":1,"message":"147","line":4,"column":8,"nodeType":"145","messageId":"146","endLine":4,"endColumn":15},{"ruleId":"143","severity":1,"message":"154","line":16,"column":10,"nodeType":"145","messageId":"146","endLine":16,"endColumn":15},{"ruleId":"143","severity":1,"message":"155","line":16,"column":17,"nodeType":"145","messageId":"146","endLine":16,"endColumn":25},{"ruleId":"143","severity":1,"message":"156","line":17,"column":7,"nodeType":"145","messageId":"146","endLine":17,"endColumn":16},{"ruleId":"143","severity":1,"message":"157","line":29,"column":10,"nodeType":"145","messageId":"146","endLine":29,"endColumn":16},{"ruleId":"143","severity":1,"message":"158","line":29,"column":18,"nodeType":"145","messageId":"146","endLine":29,"endColumn":27},{"ruleId":"143","severity":1,"message":"159","line":2,"column":8,"nodeType":"145","messageId":"146","endLine":2,"endColumn":15},{"ruleId":"143","severity":1,"message":"160","line":1,"column":10,"nodeType":"145","messageId":"146","endLine":1,"endColumn":21},{"ruleId":"143","severity":1,"message":"161","line":62,"column":9,"nodeType":"145","messageId":"146","endLine":62,"endColumn":29},{"ruleId":"162","severity":1,"message":"163","line":85,"column":9,"nodeType":"164","messageId":"165","endLine":85,"endColumn":34},{"ruleId":"143","severity":1,"message":"148","line":1,"column":17,"nodeType":"145","messageId":"146","endLine":1,"endColumn":26},{"ruleId":"143","severity":1,"message":"166","line":152,"column":24,"nodeType":"145","messageId":"146","endLine":152,"endColumn":39},{"ruleId":"143","severity":1,"message":"167","line":11,"column":9,"nodeType":"145","messageId":"146","endLine":11,"endColumn":20},{"ruleId":"162","severity":1,"message":"163","line":41,"column":13,"nodeType":"164","messageId":"165","endLine":41,"endColumn":38},{"ruleId":"143","severity":1,"message":"148","line":1,"column":17,"nodeType":"145","messageId":"146","endLine":1,"endColumn":26},{"ruleId":"143","severity":1,"message":"168","line":26,"column":10,"nodeType":"145","messageId":"146","endLine":26,"endColumn":20},{"ruleId":"143","severity":1,"message":"169","line":27,"column":24,"nodeType":"145","messageId":"146","endLine":27,"endColumn":39},{"ruleId":"143","severity":1,"message":"166","line":155,"column":24,"nodeType":"145","messageId":"146","endLine":155,"endColumn":39},{"ruleId":"143","severity":1,"message":"170","line":177,"column":5,"nodeType":"145","messageId":"146","endLine":177,"endColumn":20},"no-unused-vars","'useRoutes' is defined but never used.","Identifier","unusedVar","'NewPage' is defined but never used.","'useEffect' is defined but never used.","'Tags' is defined but never used.","'useHistory' is defined but never used.","'useState' is defined but never used.","'SearchForm' is defined but never used.","'SearchDropdown' is defined but never used.","'index' is assigned a value but never used.","'setIndex' is assigned a value but never used.","'className' is assigned a value but never used.","'active' is assigned a value but never used.","'setActive' is assigned a value but never used.","'Entries' is defined but never used.","'faBackspace' is defined but never used.","'openFilledFormHander' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'setTagClassName' is assigned a value but never used.","'pageHandler' is assigned a value but never used.","'courseName' is assigned a value but never used.","'setCourseNumber' is assigned a value but never used.","'courseNameValue' is assigned a value but never used."]